 Allow us too navigate and find elememnts based of CSS style selectors

 Select- return a list of elements matching CSS selectors
 CSS selectors cheatsheat:
      1. to select something based on an id we use the # followed by the id name
      2. to select of a class we use . and the name of the class
using select often results in shorter and cleaner code.
EXAMPLE:
   finding an element  based of an id
        using find: soup(name of the variable).find(id="#name of the id")- doesnt't return a list
        using CSS and select: soup.select("#name of the id")[0]- this return a list with one object
   finding an element with a class:
        using find/ find_all:  soup.find/find_all( class_= "name of the class")
        using the CSS select : soup.select(".name of the class")
   finding elements with data attribute:
        using the find method: soup.find/find_all(attrs={"name of the attribute": 'value' }
        using the select method: soup.select("[name of the attribute]")

ACCESSING DATA WITH BEAUTIFUL SOUP:
we can use the GET_TEXT method which will return the text within an element
               .NAME will return the tag name of a given element
                ATTRS will return a dictionary of attributes
                we can also access attributes by using brackets


NAVIGATING WITH BEAUTIFUL SOUP
means having a tag and finding elements relative to that tag
if we have an LI we can ask BS to find the parent of that LI, the next sibling, descendant

the fiat way to to t is via tags using attributes via the tags :    PARENT/PARENTS, NEXT_SIBLING/ NEXT_SIBLINGS
PREVIOUS_SIBLING/PREVIOUS SIBLINGS
the second one is via searching : FIND_PARENT/ FIND_PARENTS, FIND_SIBLING/ FIND_SIBLINGS

in the example file, NAVIGATING WITH BEAUSOUP, we we print the contents of the body, what we get is a list, so we have
all of the tags, each is an object, and we have all the new lines, and they are all over html.
each one occurs when there is a break between elements, and if i wants the first elem we need to use number 1 not 0 because 0 is the new line

